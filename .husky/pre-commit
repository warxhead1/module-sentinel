echo "Running pre-commit checks..."

# 1. Check for Rust toolchain (required for NAPI bindings)
if ! command -v cargo &> /dev/null && ! [ -f ~/.cargo/bin/cargo ]; then
    echo "ERROR: Rust toolchain not found. Please install Rust: https://rustup.rs/"
    exit 1
fi

# Add cargo to PATH if it exists in ~/.cargo/bin
if [ -f ~/.cargo/bin/cargo ]; then
    export PATH="$HOME/.cargo/bin:$PATH"
fi

# 2. Check for NAPI CLI (required for building bindings)
if ! command -v napi &> /dev/null; then
    echo "WARNING: NAPI CLI not found. Installing..."
    npm install -g @napi-rs/cli
fi

# 3. Run TypeScript type checking (fast, no compilation)
echo "Type checking TypeScript..."
npm run typecheck
if [ $? -ne 0 ]; then
    echo "ERROR: TypeScript type checking failed"
    exit 1
fi

# 4. Run linting on staged files only (if lint-staged is configured)
if command -v lint-staged &> /dev/null; then
    echo "Running lint-staged..."
    npx lint-staged
else
    echo "Running full linting..."
    npm run lint:check 2>/dev/null || {
        echo "WARNING: Linting not configured or failed"
    }
fi

# 5. Build Rust NAPI bindings (essential for functionality)
echo "Building Rust NAPI bindings..."
npm run build:rust
if [ $? -ne 0 ]; then
    echo "ERROR: Rust NAPI build failed"
    exit 1
fi

# 6. Build TypeScript (ensures everything compiles)
echo "Building TypeScript..."
npx tsc --noEmit false
if [ $? -ne 0 ]; then
    echo "ERROR: TypeScript compilation failed"
    exit 1
fi

# 7. Run fast tests (skip expensive semantic analysis for speed)
echo "Running fast tests..."
if npm run test:fast &> /dev/null; then
    echo "SUCCESS: Fast tests passed"
elif npm test &> /dev/null; then
    echo "SUCCESS: Standard tests passed"
else
    echo "WARNING: Tests not configured or failed - proceeding anyway"
fi

echo "SUCCESS: All pre-commit checks passed!"