import { BaseTest } from '../helpers/BaseTest';import { ModuleSentinel } from '../../dist/module-sentinel.js';import * as path from 'path';import * as fs from 'fs/promises';import { expect } from '@jest/globals';export class ModuleIndexerIntegrationTest extends BaseTest {  private sentinel: ModuleSentinel | null = null;  constructor() {    super('module-indexer-integration');  }  async specificSetup(): Promise<void> {    // Ensure a clean environment for indexing    const dbPath = path.join(process.cwd(), '.module-sentinel', 'index.db');    try {      await fs.unlink(dbPath);    } catch (e) {      // Ignore if file doesn't exist    }    this.sentinel = new ModuleSentinel();    // Do not skip auto-index to test the indexing process    await this.sentinel.initialize();  }  async specificTeardown(): Promise<void> {    if (this.sentinel) {      await this.sentinel.shutdown();    }    // Clean up the database after tests    const dbPath = path.join(process.cwd(), '.module-sentinel', 'index.db');    try {      await fs.unlink(dbPath);    } catch (e) {      // Ignore if file doesn't exist    }  }  async run(): Promise<void> {    console.log('\nðŸ“‹ Integration Test: Module Indexer Functionality');    await this.testIndexerBuildAndQuery();  }  private async testIndexerBuildAndQuery(): Promise<void> {    console.log('Testing indexer build and query...');    // Give some time for the indexer to build if it's running asynchronously    await new Promise(resolve => setTimeout(resolve, 5000));     const status = await this.sentinel!.getIndexStatus();    expect(status.status).toBe('active');    expect(status.totalModules).toBeGreaterThan(0);    console.log(`Indexer status: ${JSON.stringify(status, null, 2)}`);    // Test querying for a known symbol (assuming 'JobSystem' is indexed)    const jobSystemPath = path.join(this.projectPath, 'include/Core/Threading/JobSystem.ixx');    const suggestions = await this.sentinel!.suggestImports({      filePath: jobSystemPath,      content: 'class JobSystem;',      symbols: ['JobSystem']    });    expect(suggestions.length).toBeGreaterThan(0);    const jobSystemSuggestion = suggestions.find(s => s.module.includes('JobSystem.ixx'));    expect(jobSystemSuggestion).toBeDefined();    expect(jobSystemSuggestion!.symbol).toBe('JobSystem');    console.log(`Sample import suggestion for JobSystem: ${JSON.stringify(jobSystemSuggestion, null, 2)}`);  }}